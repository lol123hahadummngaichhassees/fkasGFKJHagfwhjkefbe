-- // Script \\ --

if game.PlaceId == 7711635737 then

task.wait(1)

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "sentricxHub",
    LoadingTitle = "sentricx | V1 - by sentricx",
    LoadingSubtitle = "Loading...",
    ConfigurationSaving = {
        Enabled = false,
    },
    Discord = {
        Enabled = true,
        Invite = "9mFj4UMJPU",
        RememberJoins = true
    },
})

-- // Creating Tabs \\ --
local InformationTab = Window:CreateTab("Infos", 4483345998)
local AimTab = Window:CreateTab("Aimbot/SilentAim", 4483345998)
local VisualsTab = Window:CreateTab("ESP", 4483345998)
local VehicleTab = Window:CreateTab("Vehicle", 4483345998)
local TeleportsTab = Window:CreateTab("Teleports", 4483345998)
local PoliceTab = Window:CreateTab("Police", 4483345998)
local MiscTab = Window:CreateTab("Misc", 4483345998)
local InfoTab = Window:CreateTab("Server-Info", 4483345998)
local AutoFarmTab = Window:CreateTab("AutoFarm", 4483345998)

-- // Creating Sections \\ --
local Section = InformationTab:CreateSection("Bugs & Discord")
local Section = AimTab:CreateSection("Aimbot")
local Section = VisualsTab:CreateSection("Visuals")
local Section = VehicleTab:CreateSection("Vehicle")
local Section = TeleportsTab:CreateSection("Teleports")
local Section = PoliceTab:CreateSection("Police")
local Section = MiscTab:CreateSection("Safety")
local Section = InfoTab:CreateSection("Info")
local Section = AutoFarmTab:CreateSection("Infos")

-- // InformationTab \\ --
InformationTab:CreateLabel("If you find a Bug please record or screenshot it and check\nthe developer console (Phone -> Settings -> Dev-Console!")
InformationTab:CreateLabel("Then go to our Discord Server and open a ticket to report\nthe bug! Discord below!")

InformationTab:CreateButton({
    Name = "Copy Discord-Invite",
    Callback = function()
        setclipboard("https://discord.gg/9mFj4UMJPU")
        Rayfield:Notify({
            Title = "Discord-link copied!",
            Content = "Paste the link into discord or browser!",
            Duration = 5,
            Image = 84828491431270,
        })
    end
})

-- // Variables \\ --
local boostAmount = 0
local player = game.Players.LocalPlayer
local LocalPlayer = game.Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")
local noclipEnabled = false
local noclipConnection
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local FlightSpeed = 100
local FlightAcceleration = 11
local SpeedKey = Enum.KeyCode.LeftControl
local SpeedKeyMultiplier = 13
local Flying = false
local FlightConnection = nil
local UserCharacter = nil
local UserRootPart = nil
local CurrentVelocity = Vector3.zero
local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

-- // Visuals Tab \\ --
VisualsTab:CreateLabel("Toggles are inverted, maybe i will fix it later,\nbut rn its unnecesarry!")

VisualsTab:CreateToggle({
    Name = "Display Name",
    CurrentValue = true,
    Callback = function(Value)
        espVisibility.DisplayName = Value
        toggleESP("DisplayName")
    end    
})

VisualsTab:CreateToggle({
    Name = "Username",
    CurrentValue = true,
    Callback = function(Value)
        espVisibility.Name = Value
        toggleESP("Name")
    end    
})

VisualsTab:CreateToggle({
    Name = "Health Bar",
    CurrentValue = true,
    Callback = function(Value)
        espVisibility.HealthBar = Value
        toggleESP("HealthBar")
    end    
})

VisualsTab:CreateToggle({
    Name = "Distance",
    CurrentValue = true,
    Callback = function(Value)
        espVisibility.Distance = Value
        toggleESP("Distance")
    end    
})

VisualsTab:CreateToggle({
    Name = "Job",
    CurrentValue = true,
    Callback = function(Value)
        espVisibility.Job = Value
        toggleESP("Job")
    end    
})

VisualsTab:CreateToggle({
    Name = "Wanted Status",
    CurrentValue = true,
    Callback = function(Value)
        espVisibility.Wanted = Value
        toggleESP("Wanted")
    end    
})

-- // Aimbot Tab \\ --
AimTab:CreateLabel("Enable/disable with 'V' key")

local aimbotToggle = AimTab:CreateToggle({
    Name = "Enable Aimbot",
    CurrentValue = false,
    Callback = function(Value)
        aimbotEnabled = Value
        FOVCircle.Visible = fovEnabled and aimbotEnabled
        Rayfield:Notify({
            Title = "Aimbot",
            Content = Value and "Aimbot enabled" or "Aimbot disabled",
            Duration = 3,
            Image = 4483345998
        })
    end
})

local fovToggle = AimTab:CreateToggle({
    Name = "Show FOV",
    CurrentValue = false,
    Callback = function(Value)
        fovEnabled = Value
        FOVCircle.Visible = fovEnabled and aimbotEnabled
    end
})

local teamCheckToggle = AimTab:CreateToggle({
    Name = "Team-Check",
    CurrentValue = teamCheckEnabled,
    Callback = function(Value)
        teamCheckEnabled = Value
    end
})

AimTab:CreateDropdown({
    Name = "Aim Part",
    Options = {"HumanoidRootPart", "Head"},
    CurrentOption = aimPart,
    Callback = function(Value)
        aimPart = Value
    end
})

AimTab:CreateSlider({
    Name = "FOV Size",
    Range = {50, 500},
    Increment = 1,
    Suffix = "studs",
    CurrentValue = fovRadius,
    Callback = function(Value)
        fovRadius = Value
        FOVCircle.Radius = Value
    end
})

AimTab:CreateColorPicker({
    Name = "FOV Color",
    Color = fovColor,
    Callback = function(Value)
        fovColor = Value
        FOVCircle.Color = Value
    end
})

AimTab:CreateSlider({
    Name = "FOV Transparency",
    Range = {0, 1},
    Increment = 0.05,
    CurrentValue = fovTransparency,
    Callback = function(Value)
        fovTransparency = Value
        FOVCircle.Transparency = Value
    end
})

AimTab:CreateSlider({
    Name = "Smoothness",
    Range = {0.01, 1},
    Increment = 0.01,
    CurrentValue = smoothness,
    Callback = function(Value)
        smoothness = Value
    end
})

-- // Silent Aim Section \\ --
local Section = AimTab:CreateSection("Silent Aim")

AimTab:CreateToggle({
    Name = "Silent Aim",
    CurrentValue = false,
    Callback = function(Value)
        Settings.SilentAim = Value
        circle.Visible = Value
    end
})

AimTab:CreateToggle({
    Name = "Prediction",
    CurrentValue = false,
    Callback = function(Value)
        Settings.Prediction = Value
    end
})

AimTab:CreateToggle({
    Name = "Visible Check",
    CurrentValue = false,
    Callback = function(Value)
        Settings.VisibleCheck = Value
    end
})

AimTab:CreateToggle({
    Name = "Knocked Check",
    CurrentValue = true,
    Callback = function(Value)
        Settings.IgnoreKnocked = Value
    end
})

AimTab:CreateSlider({
    Name = "FOV Size",
    Range = {50, 500},
    Increment = 1,
    Suffix = "studs",
    CurrentValue = 100,
    Callback = function(Value)
        Settings.FOVRadius = Value
        circle.Radius = Value
    end
})

AimTab:CreateInput({
    Name = "Friend Names (comma-seperated)",
    PlaceholderText = "Enter names",
    RemoveTextAfterFocusLost = false,
    Callback = function(Value)
        local names = {}
        for name in string.gmatch(Value, '([^,]+)') do
            table.insert(names, string.lower(name:match("^%s*(.-)%s*$")))
        end
        Settings.FriendNames = names
    end
})

-- // AutoFarm Tab \\ --
AutoFarmTab:CreateLabel("If you use the city bus driver farm,\nyou might get kicked for noclip!")
AutoFarmTab:CreateLabel("That's not our fault!")
AutoFarmTab:CreateLabel("That's the fault of the anti-cheat systems!")

local Section = AutoFarmTab:CreateSection("Bus")

local autoFarmToggle = AutoFarmTab:CreateToggle({
    Name = "AutoFarm",
    CurrentValue = false,
    Callback = function(value)
        autoFarmToggle = value
        if value then
            spawn(runAutoFarm)
        end
    end
})

AutoFarmTab:CreateDropdown({
    Name = "Bus Type",
    Options = {"City Bus Driver", "Rural Bus Driver"},
    CurrentOption = "City Bus Driver",
    Callback = function(value)
        selectedBusType = value
    end
})

local Section = AutoFarmTab:CreateSection("AutoRob")

AutoFarmTab:CreateButton({
    Name = "Execute AutoRob",
    Callback = function()
        Rayfield:Notify({
            Title = "sentricx - AutoRob",
            Content = "Executing AutoRob script...",
            Duration = 3,
            Image = 4483345998
        })
        loadstring(game:HttpGet("https://raw.githubusercontent.com/sentricx/sentricx/refs/heads/main/AutoRob"))()
    end
})

-- // Teleports Tab \\ --
TeleportsTab:CreateButton({
    Name = "TP to Robbable Vending Machine",
    Callback = function()
        ensurePlayerInVehicle()
        local character = player.Character or player.CharacterAdded:Wait()
        local vehicle = workspace.Vehicles:FindFirstChild(player.Name)
        local machines = workspace:FindFirstChild("Robberies") and workspace.Robberies:FindFirstChild("VendingMachines")
        if not vehicle or not machines then
            print("Vehicle or machines not found")
            return
        end

        local closest, shortest = nil, math.huge
        for _, model in pairs(machines:GetChildren()) do
            for _, part in pairs(model:GetChildren()) do
                if part:IsA("Part") and part.Color == Color3.fromRGB(73, 147, 0) then
                    local dist = (character.HumanoidRootPart.Position - part.Position).Magnitude
                    if dist < shortest then
                        shortest = dist
                        closest = part
                    end
                end
            end
        end
        if not closest then
            print("No valid vending machine found")
            return
        end

        moveVehicle(vehicle, closest.CFrame, 170)
    end,
})

TeleportsTab:CreateButton({
    Name = "Teleport to Nearest Dealer",
    Callback = function()
        ensurePlayerInVehicle()
        local character = player.Character or player.CharacterAdded:Wait()
        local vehicle = workspace.Vehicles:FindFirstChild(player.Name)
        if not vehicle then
            Rayfield:Notify({
                Title = "Error",
                Content = "No vehicle found.",
                Duration = 3,
                Image = 4483345998
            })
            return
        end

        local dealers = workspace:FindFirstChild("Dealers")
        if not dealers then
            Rayfield:Notify({
                Title = "Error",
                Content = "Dealers not found.",
                Duration = 3,
                Image = 4483345998
            })
            return
        end

        local closest, shortest = nil, math.huge
        for _, dealer in pairs(dealers:GetChildren()) do
            if dealer:FindFirstChild("Head") then
                local dist = (character.HumanoidRootPart.Position - dealer.Head.Position).Magnitude
                if dist < shortest then
                    shortest = dist
                    closest = dealer.Head
                end
            end
        end

        if not closest then
            Rayfield:Notify({
                Title = "Error",
                Content = "No dealer found.",
                Duration = 3,
                Image = 4483345998
            })
            return
        end

        moveVehicle(vehicle, closest.CFrame + Vector3.new(0, 5, 0), 170)
    end
})

-- // Police Tab \\ --
PoliceTab:CreateToggle({
    Name = "Auto-Taser",
    CurrentValue = false,
    Callback = function(Value)
        TaserEnabled = Value
    end    
})

local Section = PoliceTab:CreateSection("Farming")

PoliceTab:CreateToggle({
    Name = "Radar-Farm",
    CurrentValue = false,
    Callback = function(Value)
        autoRadarToggle = Value
    end    
})

PoliceTab:CreateToggle({
    Name = "AntiAfk",
    CurrentValue = false,
    Callback = function(Value)
        AntiAFKEnabled = Value
    end    
})

-- // Misc Tab \\ --
MiscTab:CreateButton({
    Name = "Jump Out From Police Vehicle",
    Callback = function()
        JumpOut()
    end    
})

MiscTab:CreateToggle({
    Name = "Anti-Taser",
    CurrentValue = false,
    Callback = function(Value)
        AntiTaserEnabled = Value
        
        for _, c in ipairs(Connections) do
            c:Disconnect()
        end
        Connections = {}
        
        if AntiTaserEnabled then
            local function Setup()
                local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
                local humanoid = char:WaitForChild("Humanoid")
                local hrp = char:WaitForChild("HumanoidRootPart")
                
                table.insert(Connections, humanoid.StateChanged:Connect(function(_, new)
                    if new == Enum.HumanoidStateType.Physics or new == Enum.HumanoidStateType.PlatformStanding then
                        humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    end
                }))
                
                table.insert(Connections, game:GetService("RunService").Heartbeat:Connect(function()
                    if humanoid.PlatformStand then
                        humanoid.PlatformStand = false
                    end
                    if humanoid.WalkSpeed < normalWalkSpeed then
                        humanoid.WalkSpeed = normalWalkSpeed
                    end
                    if hrp.Anchored then
                        hrp.Anchored = false
                    end
                end))
            end
            
            Setup()
            
            game.Players.LocalPlayer.CharacterAdded:Connect(function()
                wait(1)
                Setup()
            end)
        end
    end    
})

MiscTab:CreateToggle({
    Name = "Anti-Arrest",
    CurrentValue = false,
    Callback = function(Value)
        antiArrestEnabled = Value
    end    
})

local Section = MiscTab:CreateSection("Player")

MiscTab:CreateLabel("Press T to toggle Speedhack")

local speedToggle = MiscTab:CreateToggle({
    Name = "Toggle Speedhack",
    CurrentValue = false,
    Callback = function(Value)
        SpeedhackEnabled = Value
        Rayfield:Notify({
            Title = "Speedhack",
            Content = SpeedhackEnabled and "Speedhack enabled" or "Speedhack disabled",
            Duration = 3,
            Image = 4483345998
        })
    end
})

local speedSlider = MiscTab:CreateSlider({
    Name = "Speed Multiplier",
    Range = {1, 1.3},
    Increment = 0.05,
    Suffix = "x",
    CurrentValue = SpeedMultiplier,
    Callback = function(Value)
        SpeedMultiplier = Value
    end
})

MiscTab:CreateButton({
    Name = "Self revive",
    Callback = function()
        if IsKnocked() then
            local char = LocalPlayer.Character
            if not char then return end
            local humanoid = char:FindFirstChildWhichIsA("Humanoid")
            local hrp = char:FindFirstChild("HumanoidRootPart")
            if not humanoid or not hrp then return end

            local vehicle = workspace:FindFirstChild("Vehicles") and workspace.Vehicles:FindFirstChild(LocalPlayer.Name)
            if not vehicle then return end

            local speed = 200
            local hospitalCFrame = CFrame.new(-84, 5.6, 1109.3)
            local startPos = hrp.CFrame

            teleportIntoCar()
            wait(0.5)

            moveVehicle(vehicle, hospitalCFrame, speed, function()
                teleportOutOfCar()
                wait(0.3)

                teleportOnBed()

                repeat
                    task.wait(0.2)
                until humanoid and humanoid.Health >= 100

                humanoid.Sit = false
                wait(0.3)

                teleportIntoCar()
                wait(0.3)

                moveVehicle(vehicle, startPos, speed, function()
                    wait(0.3)
                    teleportIntoCar()
                end)
            end)
        else
            Rayfield:Notify({
                Title = "Quantum",
                Content = "You are not dead",
                Duration = 5,
                Image = 4483345998
            })
        end
    end
})

MiscTab:CreateLabel("losing your stuff if resetting character")
MiscTab:CreateButton({
    Name = "Reset Character",
    Callback = function()
        local player = game.Players.LocalPlayer
        if player.Character then
            player.Character:BreakJoints()
            wait(0.1)
            player.Character:Destroy()
        end
        Rayfield:Notify({
            Title = "Quantum",
            Content = "Character reset successfully",
            Duration = 5,
            Image = 4483345998
        })
    end    
})

MiscTab:CreateToggle({
    Name = "Noclip",
    CurrentValue = false,
    Callback = function(Value)
        noclipEnabled = Value
        local character = player.Character or player.CharacterAdded:Wait()
        
        if Value then
            SetNoclipMode(character, true)
            noclipConnection = RunService.Stepped:Connect(function()
                if noclipEnabled and character then
                    SetNoclipMode(character, true)
                end
            end)
        else
            if noclipConnection then
                noclipConnection:Disconnect()
            end
            SetNoclipMode(character, false)
        end
    end    
})

MiscTab:CreateToggle({
    Name = "Anti-Death",
    CurrentValue = false,
    Callback = function(Value)
        local env = getfenv()
        if Value then
            env.downed = true
            env.antichanged1 = player.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
                player.Character.Humanoid.Health = 100
            end)
        else
            if env.antichanged1 then
                env.antichanged1:Disconnect()
                env.antichanged1 = nil
            end
            env.downed = false
        end
    end    
})

MiscTab:CreateToggle({
    Name = "Anti-Fall",
    CurrentValue = false,
    Callback = function(Value)
        if Value then
            getfenv().ANTIFALL = true
            getfenv().nofall = game:GetService("RunService").RenderStepped:Connect(function()
                local character = game.Players.LocalPlayer.Character
                if character then
                    local rootPart = character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        local raycastParams = RaycastParams.new()
                        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                        raycastParams.FilterDescendantsInstances = {character}

                        local ray = workspace:Raycast(rootPart.Position, Vector3.new(0, -8, 0), raycastParams)
                        if ray and rootPart.Velocity.Y < -50 then
                            rootPart.Velocity = Vector3.new(0, 0, 0)
                        end
                    end
                end
            end)
        else
            getfenv().ANTIFALL = false
            if getfenv().nofall then
                getfenv().nofall:Disconnect()
                getfenv().nofall = nil
            end
        end
    end    
})

MiscTab:CreateButton({
    Name = "Infinite Stamina (works on good executors)",
    Callback = function()
        if getfenv().firsttime == nil then
            getfenv().firsttime = true

            local func
            for i, v in pairs(getgc(true)) do
                if type(v) == "function" and debug.getinfo(v).name == "setStamina" then
                    func = v
                    break
                end
            end

            if func then
                local old = hookfunction(func, function(...)
                    local args = {...}
                    return args[1], math.huge
                end)
            end
        end 
    end    
})

local Section = MiscTab:CreateSection({
    Name = "Voice Chat"
})

MiscTab:CreateLabel("Only works, if you are on the same server you got VC banned\nand you got VC enabled in your settings!")

MiscTab:CreateButton({
    Name = "Rejoin Voice Chat",
    Callback = function()
        local voiceChatService = game:GetService("VoiceChatService")
        voiceChatService:joinVoice()
        Rayfield:Notify({
            Title = "Voice Chat",
            Content = "You sucessfully rejoined Voice Chat.",
            Duration = 3,
            Image = 4483345998
        })
    end
})

-- // Vehicle Tab \\ --
VehicleTab:CreateLabel("Fly Kebind: X")
VehicleTab:CreateToggle({
    Name = "CarFly",
    CurrentValue = false,
    Callback = function(Value)
        ToggleFlight(Value)
    end    
})

VehicleTab:CreateToggle({
    Name = "Mobile CarFly",
    CurrentValue = false,
    Callback = function(Value)
        -- Mobile Fly UI implementation here
    end
})

VehicleTab:CreateSlider({
    Name = "Fly Speed",
    Range = {0, 170},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = FlightSpeed,
    Callback = function(Value)
        FlightSpeed = Value
    end    
})

VehicleTab:CreateButton({
    Name = "CarGod",
    Callback = function()
        local vehicleGodMode = true  
        local lastVehicle = nil
        
        local function updateVehicle()
            if not vehicleGodMode then return end
            if not lastVehicle or not lastVehicle.Parent then
                local vehiclesFolder = workspace:FindFirstChild("Vehicles")
                lastVehicle = vehiclesFolder and vehiclesFolder:FindFirstChild(player.Name) or nil
            end
        
            if lastVehicle then
                lastVehicle:SetAttribute("IsOn", true)
                lastVehicle:SetAttribute("currentHealth", 500)
                lastVehicle:SetAttribute("currentFuel", 45)
            end
        end
        
        RunService.Heartbeat:Connect(updateVehicle) 
    end
})

VehicleTab:CreateInput({
    Name = "NumberPlate Text:",
    PlaceholderText = "sentricx",
    RemoveTextAfterFocusLost = false,
    Callback = function(inputText)
        local Vehicle = workspace.Vehicles:FindFirstChild(LocalPlayer.Name)

        if Vehicle and Vehicle:FindFirstChild("Body") then
            local licensePlates = Vehicle.Body:FindFirstChild("LicensePlates")
            if licensePlates then
                for _, side in ipairs({"Front", "Back"}) do
                    local plate = licensePlates:FindFirstChild(side)
                    if plate and plate:FindFirstChild("Gui") then
                        local gui = plate.Gui
                        if gui:FindFirstChild("TextLabel") then
                            gui.TextLabel.Text = inputText
                        else
                            warn("TextLabel not found in " .. side)
                        end
                    else
                        warn(side .. " license plate GUI not found")
                    end
                end
            else
                warn("LicensePlates not found")
            end
        else
            warn("Vehicle not found")
        end
    end
})

VehicleTab:CreateButton({
    Name = "Sit In Vehicle",
    Callback = function()
        ensurePlayerInVehicle()
    end    
})

local Section = VehicleTab:CreateSection("Tuning Mods")

VehicleTab:CreateSlider({
    Name = "Engine Level",
    Range = {0, 6},
    Increment = 1,
    Suffix = "Level",
    CurrentValue = 0,
    Callback = function(Value)
        vehicleFolder:SetAttribute("engineLevel", Value)
    end    
})

VehicleTab:CreateSlider({
    Name = "Brakes Level",
    Range = {0, 6},
    Increment = 1,
    Suffix = "Level",
    CurrentValue = 0,
    Callback = function(Value)
        vehicleFolder:SetAttribute("brakesLevel", Value)
    end    
})

VehicleTab:CreateSlider({
    Name = "Armor Level",
    Range = {0, 6},
    Increment = 1,
    Suffix = "Level",
    CurrentValue = 0,
    Callback = function(Value)
        vehicleFolder:SetAttribute("armorLevel", Value)
    end    
})

-- // Info Tab \\ --
local currentPlayersLabel = InfoTab:CreateLabel("Current Players: 0")
local policeLabel = InfoTab:CreateLabel("Police: 0")
local fireDeptLabel = InfoTab:CreateLabel("Fire Department: 0")
local adacLabel = InfoTab:CreateLabel("ADAC: 0")
local bankLabel = InfoTab:CreateLabel("Bank: Unknown")
local clubLabel = InfoTab:CreateLabel("Club: Unknown")

end
